image: adoptopenjdk/maven-openjdk11

backend-build:
  stage: build
  only:
      - backend-dev
  script:
    - cd Backend
    - "mvn compile"


backend-test:
  # This where the magic happens
  stage: test
  only: 
    - backend-dev
    - master
  script:
    - cd Backend
    - touch $(pwd)/src/main/resources/application.properties
    - cp "$PROPERTIES" $(pwd)/src/main/resources/application.properties
    - mvn clean test
  artifacts:
    when: always
    paths:
      - target/site/jacoco # We need to save the HTML-reports that Jacoco produces, so we can serve it on Gitlab Pages in the next stage
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  needs: ["backend-build"]

# We move the code coverage reports generated by jacoco (see pom.xml) to be served by Gitlab Pages (Settings -> Pages)
deploy-test-reports:
  stage: deploy
  image: alpine:latest
  script:
    - mv Backend/target/site/jacoco public
  artifacts:
    paths:
      - public
  only:
    - master
    - backend-dev
  needs: ["backend-test"]

deploy:
  stage: deploy
  script:
    - apt-get update -y && apt-get install openssh-client -y
    - mkdir ~/.ssh
    - ssh-keyscan 13.51.58.86 > ~/.ssh/known_hosts
    - touch ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa # Required permission by ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - ssh app@13.51.58.86 ./runjava.sh
  only:
    - backend-dev
    - master
  needs: ["backend-build"]
